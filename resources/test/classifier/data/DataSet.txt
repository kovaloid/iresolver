AMQ-6134 | ActiveMQ corrupted state when local disk fills up and Queues begin to buffer to KahaDB There are already issues reporting this in AMQ 3098 and AMQ 5786 but they have been closed as Incomplete I ve left a comment on 5786 but I fear that it may get lost Fundamentally KahaDB ActiveMQ do not survive if Queues start filling up and buffering to KahaDB disk when the disk then becomes full because of an external issue in our case rsyslog Because KahaDB does not pre allocate space it seems vunerable to this case I will attach broker logs and Kahadb store during the corrupted state 
AMQ-5100 | PKCS11 (NSS-FIPS) support in A-MQ/ActiveMQ I have attempted to configure PKCS11 NSS support in ActiveMQ however I am receiving the following exception Caused by java io FileNotFoundException class path resource NONE cannot be opened because it does not exist at org springframework core io ClassPathResource getInputStream ClassPathResource java 157 at org apache activemq spring SpringSslContext createKeyManagerKeyStore SpringSslContext java 119 at org apache activemq spring SpringSslContext createKeyManagers SpringSslContext java 88 at org apache activemq spring SpringSslContext afterPropertiesSet SpringSslContext java 65 at sun reflect NativeMethodAccessorImpl invoke0 Native Method at sun reflect NativeMethodAccessorImpl invoke NativeMethodAccessorImpl java 57 at sun reflect DelegatingMethodAccessorImpl invoke DelegatingMethodAccessorImpl java 43 at java lang reflect Method invoke Method java 622 at org springframework beans factory support AbstractAutowireCapableBeanFactory invokeCustomInitMethod AbstractAutowireCapableBeanFactory java 1581 at org springframework beans factory support AbstractAutowireCapableBeanFactory invokeInitMethods AbstractAutowireCapableBeanFactory java 1522 at org springframework beans factory support AbstractAutowireCapableBeanFactory initializeBean AbstractAutowireCapableBeanFactory java 1452 40 more My configured sslContext for the broker looks like this sslContext sslContext keyStore NONE keyStoreType PKCS11 keyStorePassword password trustStore etc activemqssl truststore jks trustStorePassword password sslContext AFAIK setting keyStore to NONE is the generally accepted way to do with with PKCS11 The code should generate a warning at most for this but instead I receive the above exception and a failure to load the keystore The activemq code looks like this in org apache activemq spring SpringSslContext private KeyStore createKeyManagerKeyStore throws Exception if keyStore null return null KeyStore ks KeyStore getInstance keyStoreType InputStream is Utils resourceFromString keyStore getInputStream try ks load is keyStorePassword null null keyStorePassword toCharArray finally is close return ks It looks like this should just be setting is to null generating a warning and then calling ks load with the null inputstream the nss library will load the nss files based upon the nss cfg file 
